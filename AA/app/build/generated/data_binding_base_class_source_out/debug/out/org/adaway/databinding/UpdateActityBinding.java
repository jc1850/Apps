// Generated by view binder compiler. Do not edit!
package org.adaway.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.adaway.R;

public final class UpdateActityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ScrollView changelogScrollView;

  @NonNull
  public final TextView changelogTextView;

  @NonNull
  public final TextView changelogTitleTextView;

  @NonNull
  public final ProgressBar downloadProgressBar;

  @NonNull
  public final ImageView headerImageView;

  @NonNull
  public final TextView headerTextView;

  @NonNull
  public final TextView progressTextView;

  @NonNull
  public final TextView supportTitleTextView;

  @NonNull
  public final MaterialButton updateButton;

  @NonNull
  public final MaterialButton updateDonateButton;

  @NonNull
  public final MaterialButton updateSponsorButton;

  private UpdateActityBinding(@NonNull ConstraintLayout rootView,
      @NonNull ScrollView changelogScrollView, @NonNull TextView changelogTextView,
      @NonNull TextView changelogTitleTextView, @NonNull ProgressBar downloadProgressBar,
      @NonNull ImageView headerImageView, @NonNull TextView headerTextView,
      @NonNull TextView progressTextView, @NonNull TextView supportTitleTextView,
      @NonNull MaterialButton updateButton, @NonNull MaterialButton updateDonateButton,
      @NonNull MaterialButton updateSponsorButton) {
    this.rootView = rootView;
    this.changelogScrollView = changelogScrollView;
    this.changelogTextView = changelogTextView;
    this.changelogTitleTextView = changelogTitleTextView;
    this.downloadProgressBar = downloadProgressBar;
    this.headerImageView = headerImageView;
    this.headerTextView = headerTextView;
    this.progressTextView = progressTextView;
    this.supportTitleTextView = supportTitleTextView;
    this.updateButton = updateButton;
    this.updateDonateButton = updateDonateButton;
    this.updateSponsorButton = updateSponsorButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UpdateActityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UpdateActityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.update_actity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UpdateActityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changelogScrollView;
      ScrollView changelogScrollView = ViewBindings.findChildViewById(rootView, id);
      if (changelogScrollView == null) {
        break missingId;
      }

      id = R.id.changelogTextView;
      TextView changelogTextView = ViewBindings.findChildViewById(rootView, id);
      if (changelogTextView == null) {
        break missingId;
      }

      id = R.id.changelogTitleTextView;
      TextView changelogTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (changelogTitleTextView == null) {
        break missingId;
      }

      id = R.id.downloadProgressBar;
      ProgressBar downloadProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (downloadProgressBar == null) {
        break missingId;
      }

      id = R.id.headerImageView;
      ImageView headerImageView = ViewBindings.findChildViewById(rootView, id);
      if (headerImageView == null) {
        break missingId;
      }

      id = R.id.headerTextView;
      TextView headerTextView = ViewBindings.findChildViewById(rootView, id);
      if (headerTextView == null) {
        break missingId;
      }

      id = R.id.progressTextView;
      TextView progressTextView = ViewBindings.findChildViewById(rootView, id);
      if (progressTextView == null) {
        break missingId;
      }

      id = R.id.supportTitleTextView;
      TextView supportTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (supportTitleTextView == null) {
        break missingId;
      }

      id = R.id.update_button;
      MaterialButton updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      id = R.id.update_donate_button;
      MaterialButton updateDonateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateDonateButton == null) {
        break missingId;
      }

      id = R.id.update_sponsor_button;
      MaterialButton updateSponsorButton = ViewBindings.findChildViewById(rootView, id);
      if (updateSponsorButton == null) {
        break missingId;
      }

      return new UpdateActityBinding((ConstraintLayout) rootView, changelogScrollView,
          changelogTextView, changelogTitleTextView, downloadProgressBar, headerImageView,
          headerTextView, progressTextView, supportTitleTextView, updateButton, updateDonateButton,
          updateSponsorButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
