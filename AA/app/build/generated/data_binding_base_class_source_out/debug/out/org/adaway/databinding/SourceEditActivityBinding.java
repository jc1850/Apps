// Generated by view binder compiler. Do not edit!
package org.adaway.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.adaway.R;

public final class SourceEditActivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton allowFormatButton;

  @NonNull
  public final MaterialButton blockFormatButton;

  @NonNull
  public final MaterialButton fileButton;

  @NonNull
  public final TextView fileLocationTextView;

  @NonNull
  public final MaterialButtonToggleGroup formatButtonGroup;

  @NonNull
  public final TextView formatTextView;

  @NonNull
  public final TextInputEditText labelEditText;

  @NonNull
  public final TextInputLayout labelTextInputLayout;

  @NonNull
  public final TextInputEditText locationEditText;

  @NonNull
  public final MaterialCheckBox redirectedHostsCheckbox;

  @NonNull
  public final TextView redirectedHostsWarningTextView;

  @NonNull
  public final MaterialButtonToggleGroup typeButtonGroup;

  @NonNull
  public final TextView typeTextView;

  @NonNull
  public final MaterialButton urlButton;

  @NonNull
  public final TextInputLayout urlTextInputLayout;

  private SourceEditActivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton allowFormatButton, @NonNull MaterialButton blockFormatButton,
      @NonNull MaterialButton fileButton, @NonNull TextView fileLocationTextView,
      @NonNull MaterialButtonToggleGroup formatButtonGroup, @NonNull TextView formatTextView,
      @NonNull TextInputEditText labelEditText, @NonNull TextInputLayout labelTextInputLayout,
      @NonNull TextInputEditText locationEditText,
      @NonNull MaterialCheckBox redirectedHostsCheckbox,
      @NonNull TextView redirectedHostsWarningTextView,
      @NonNull MaterialButtonToggleGroup typeButtonGroup, @NonNull TextView typeTextView,
      @NonNull MaterialButton urlButton, @NonNull TextInputLayout urlTextInputLayout) {
    this.rootView = rootView;
    this.allowFormatButton = allowFormatButton;
    this.blockFormatButton = blockFormatButton;
    this.fileButton = fileButton;
    this.fileLocationTextView = fileLocationTextView;
    this.formatButtonGroup = formatButtonGroup;
    this.formatTextView = formatTextView;
    this.labelEditText = labelEditText;
    this.labelTextInputLayout = labelTextInputLayout;
    this.locationEditText = locationEditText;
    this.redirectedHostsCheckbox = redirectedHostsCheckbox;
    this.redirectedHostsWarningTextView = redirectedHostsWarningTextView;
    this.typeButtonGroup = typeButtonGroup;
    this.typeTextView = typeTextView;
    this.urlButton = urlButton;
    this.urlTextInputLayout = urlTextInputLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SourceEditActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SourceEditActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.source_edit_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SourceEditActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allow_format_button;
      MaterialButton allowFormatButton = ViewBindings.findChildViewById(rootView, id);
      if (allowFormatButton == null) {
        break missingId;
      }

      id = R.id.block_format_button;
      MaterialButton blockFormatButton = ViewBindings.findChildViewById(rootView, id);
      if (blockFormatButton == null) {
        break missingId;
      }

      id = R.id.file_button;
      MaterialButton fileButton = ViewBindings.findChildViewById(rootView, id);
      if (fileButton == null) {
        break missingId;
      }

      id = R.id.file_location_text_view;
      TextView fileLocationTextView = ViewBindings.findChildViewById(rootView, id);
      if (fileLocationTextView == null) {
        break missingId;
      }

      id = R.id.format_button_group;
      MaterialButtonToggleGroup formatButtonGroup = ViewBindings.findChildViewById(rootView, id);
      if (formatButtonGroup == null) {
        break missingId;
      }

      id = R.id.format_text_view;
      TextView formatTextView = ViewBindings.findChildViewById(rootView, id);
      if (formatTextView == null) {
        break missingId;
      }

      id = R.id.labelEditText;
      TextInputEditText labelEditText = ViewBindings.findChildViewById(rootView, id);
      if (labelEditText == null) {
        break missingId;
      }

      id = R.id.label_text_input_layout;
      TextInputLayout labelTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (labelTextInputLayout == null) {
        break missingId;
      }

      id = R.id.location_edit_text;
      TextInputEditText locationEditText = ViewBindings.findChildViewById(rootView, id);
      if (locationEditText == null) {
        break missingId;
      }

      id = R.id.redirected_hosts_checkbox;
      MaterialCheckBox redirectedHostsCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (redirectedHostsCheckbox == null) {
        break missingId;
      }

      id = R.id.redirected_hosts_warning_text_view;
      TextView redirectedHostsWarningTextView = ViewBindings.findChildViewById(rootView, id);
      if (redirectedHostsWarningTextView == null) {
        break missingId;
      }

      id = R.id.type_button_group;
      MaterialButtonToggleGroup typeButtonGroup = ViewBindings.findChildViewById(rootView, id);
      if (typeButtonGroup == null) {
        break missingId;
      }

      id = R.id.type_text_view;
      TextView typeTextView = ViewBindings.findChildViewById(rootView, id);
      if (typeTextView == null) {
        break missingId;
      }

      id = R.id.url_button;
      MaterialButton urlButton = ViewBindings.findChildViewById(rootView, id);
      if (urlButton == null) {
        break missingId;
      }

      id = R.id.url_text_input_layout;
      TextInputLayout urlTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (urlTextInputLayout == null) {
        break missingId;
      }

      return new SourceEditActivityBinding((ConstraintLayout) rootView, allowFormatButton,
          blockFormatButton, fileButton, fileLocationTextView, formatButtonGroup, formatTextView,
          labelEditText, labelTextInputLayout, locationEditText, redirectedHostsCheckbox,
          redirectedHostsWarningTextView, typeButtonGroup, typeTextView, urlButton,
          urlTextInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
