// Generated by view binder compiler. Do not edit!
package org.adaway.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.adaway.R;

public final class HostsSourcesCardBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final CheckBox sourceEnabledCheckBox;

  @NonNull
  public final TextView sourceLabelTextView;

  @NonNull
  public final TextView sourceSizeTextView;

  @NonNull
  public final TextView sourceUpdateTextView;

  @NonNull
  public final TextView sourceUrlTextView;

  private HostsSourcesCardBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull CheckBox sourceEnabledCheckBox, @NonNull TextView sourceLabelTextView,
      @NonNull TextView sourceSizeTextView, @NonNull TextView sourceUpdateTextView,
      @NonNull TextView sourceUrlTextView) {
    this.rootView = rootView;
    this.sourceEnabledCheckBox = sourceEnabledCheckBox;
    this.sourceLabelTextView = sourceLabelTextView;
    this.sourceSizeTextView = sourceSizeTextView;
    this.sourceUpdateTextView = sourceUpdateTextView;
    this.sourceUrlTextView = sourceUrlTextView;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static HostsSourcesCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HostsSourcesCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.hosts_sources_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HostsSourcesCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.sourceEnabledCheckBox;
      CheckBox sourceEnabledCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (sourceEnabledCheckBox == null) {
        break missingId;
      }

      id = R.id.sourceLabelTextView;
      TextView sourceLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (sourceLabelTextView == null) {
        break missingId;
      }

      id = R.id.sourceSizeTextView;
      TextView sourceSizeTextView = ViewBindings.findChildViewById(rootView, id);
      if (sourceSizeTextView == null) {
        break missingId;
      }

      id = R.id.sourceUpdateTextView;
      TextView sourceUpdateTextView = ViewBindings.findChildViewById(rootView, id);
      if (sourceUpdateTextView == null) {
        break missingId;
      }

      id = R.id.sourceUrlTextView;
      TextView sourceUrlTextView = ViewBindings.findChildViewById(rootView, id);
      if (sourceUrlTextView == null) {
        break missingId;
      }

      return new HostsSourcesCardBinding((LinearLayoutCompat) rootView, sourceEnabledCheckBox,
          sourceLabelTextView, sourceSizeTextView, sourceUpdateTextView, sourceUrlTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
