// Generated by view binder compiler. Do not edit!
package org.openobservatory.ooniprobe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openobservatory.ooniprobe.R;

public final class FragmentResultHeadPerformanceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView download;

  @NonNull
  public final TextView downloadLabel;

  @NonNull
  public final TextView downloadUnit;

  @NonNull
  public final TextView ping;

  @NonNull
  public final TextView pingLabel;

  @NonNull
  public final TextView pingUnit;

  @NonNull
  public final TextView upload;

  @NonNull
  public final TextView uploadLabel;

  @NonNull
  public final TextView uploadUnit;

  @NonNull
  public final TextView video;

  @NonNull
  public final TextView videoLabel;

  @NonNull
  public final TextView videoUnit;

  private FragmentResultHeadPerformanceBinding(@NonNull LinearLayout rootView,
      @NonNull TextView download, @NonNull TextView downloadLabel, @NonNull TextView downloadUnit,
      @NonNull TextView ping, @NonNull TextView pingLabel, @NonNull TextView pingUnit,
      @NonNull TextView upload, @NonNull TextView uploadLabel, @NonNull TextView uploadUnit,
      @NonNull TextView video, @NonNull TextView videoLabel, @NonNull TextView videoUnit) {
    this.rootView = rootView;
    this.download = download;
    this.downloadLabel = downloadLabel;
    this.downloadUnit = downloadUnit;
    this.ping = ping;
    this.pingLabel = pingLabel;
    this.pingUnit = pingUnit;
    this.upload = upload;
    this.uploadLabel = uploadLabel;
    this.uploadUnit = uploadUnit;
    this.video = video;
    this.videoLabel = videoLabel;
    this.videoUnit = videoUnit;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentResultHeadPerformanceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentResultHeadPerformanceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_result_head_performance, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentResultHeadPerformanceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.download;
      TextView download = ViewBindings.findChildViewById(rootView, id);
      if (download == null) {
        break missingId;
      }

      id = R.id.downloadLabel;
      TextView downloadLabel = ViewBindings.findChildViewById(rootView, id);
      if (downloadLabel == null) {
        break missingId;
      }

      id = R.id.downloadUnit;
      TextView downloadUnit = ViewBindings.findChildViewById(rootView, id);
      if (downloadUnit == null) {
        break missingId;
      }

      id = R.id.ping;
      TextView ping = ViewBindings.findChildViewById(rootView, id);
      if (ping == null) {
        break missingId;
      }

      id = R.id.pingLabel;
      TextView pingLabel = ViewBindings.findChildViewById(rootView, id);
      if (pingLabel == null) {
        break missingId;
      }

      id = R.id.pingUnit;
      TextView pingUnit = ViewBindings.findChildViewById(rootView, id);
      if (pingUnit == null) {
        break missingId;
      }

      id = R.id.upload;
      TextView upload = ViewBindings.findChildViewById(rootView, id);
      if (upload == null) {
        break missingId;
      }

      id = R.id.uploadLabel;
      TextView uploadLabel = ViewBindings.findChildViewById(rootView, id);
      if (uploadLabel == null) {
        break missingId;
      }

      id = R.id.uploadUnit;
      TextView uploadUnit = ViewBindings.findChildViewById(rootView, id);
      if (uploadUnit == null) {
        break missingId;
      }

      id = R.id.video;
      TextView video = ViewBindings.findChildViewById(rootView, id);
      if (video == null) {
        break missingId;
      }

      id = R.id.videoLabel;
      TextView videoLabel = ViewBindings.findChildViewById(rootView, id);
      if (videoLabel == null) {
        break missingId;
      }

      id = R.id.videoUnit;
      TextView videoUnit = ViewBindings.findChildViewById(rootView, id);
      if (videoUnit == null) {
        break missingId;
      }

      return new FragmentResultHeadPerformanceBinding((LinearLayout) rootView, download,
          downloadLabel, downloadUnit, ping, pingLabel, pingUnit, upload, uploadLabel, uploadUnit,
          video, videoLabel, videoUnit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
