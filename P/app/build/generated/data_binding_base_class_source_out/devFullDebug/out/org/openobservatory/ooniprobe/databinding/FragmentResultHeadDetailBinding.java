// Generated by view binder compiler. Do not edit!
package org.openobservatory.ooniprobe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openobservatory.ooniprobe.R;

public final class FragmentResultHeadDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView country;

  @NonNull
  public final LinearLayout countryBox;

  @NonNull
  public final LinearLayout dataUsage;

  @NonNull
  public final TextView download;

  @NonNull
  public final LinearLayout networkBox;

  @NonNull
  public final TextView networkDetail;

  @NonNull
  public final TextView networkName;

  @NonNull
  public final TextView runtime;

  @NonNull
  public final LinearLayout runtimeBox;

  @NonNull
  public final TextView runtimeLabel;

  @NonNull
  public final TextView startTime;

  @NonNull
  public final LinearLayout startTimeBox;

  @NonNull
  public final TextView upload;

  private FragmentResultHeadDetailBinding(@NonNull LinearLayout rootView, @NonNull TextView country,
      @NonNull LinearLayout countryBox, @NonNull LinearLayout dataUsage, @NonNull TextView download,
      @NonNull LinearLayout networkBox, @NonNull TextView networkDetail,
      @NonNull TextView networkName, @NonNull TextView runtime, @NonNull LinearLayout runtimeBox,
      @NonNull TextView runtimeLabel, @NonNull TextView startTime,
      @NonNull LinearLayout startTimeBox, @NonNull TextView upload) {
    this.rootView = rootView;
    this.country = country;
    this.countryBox = countryBox;
    this.dataUsage = dataUsage;
    this.download = download;
    this.networkBox = networkBox;
    this.networkDetail = networkDetail;
    this.networkName = networkName;
    this.runtime = runtime;
    this.runtimeBox = runtimeBox;
    this.runtimeLabel = runtimeLabel;
    this.startTime = startTime;
    this.startTimeBox = startTimeBox;
    this.upload = upload;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentResultHeadDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentResultHeadDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_result_head_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentResultHeadDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.country;
      TextView country = ViewBindings.findChildViewById(rootView, id);
      if (country == null) {
        break missingId;
      }

      id = R.id.countryBox;
      LinearLayout countryBox = ViewBindings.findChildViewById(rootView, id);
      if (countryBox == null) {
        break missingId;
      }

      id = R.id.dataUsage;
      LinearLayout dataUsage = ViewBindings.findChildViewById(rootView, id);
      if (dataUsage == null) {
        break missingId;
      }

      id = R.id.download;
      TextView download = ViewBindings.findChildViewById(rootView, id);
      if (download == null) {
        break missingId;
      }

      id = R.id.networkBox;
      LinearLayout networkBox = ViewBindings.findChildViewById(rootView, id);
      if (networkBox == null) {
        break missingId;
      }

      id = R.id.networkDetail;
      TextView networkDetail = ViewBindings.findChildViewById(rootView, id);
      if (networkDetail == null) {
        break missingId;
      }

      id = R.id.networkName;
      TextView networkName = ViewBindings.findChildViewById(rootView, id);
      if (networkName == null) {
        break missingId;
      }

      id = R.id.runtime;
      TextView runtime = ViewBindings.findChildViewById(rootView, id);
      if (runtime == null) {
        break missingId;
      }

      id = R.id.runtimeBox;
      LinearLayout runtimeBox = ViewBindings.findChildViewById(rootView, id);
      if (runtimeBox == null) {
        break missingId;
      }

      id = R.id.runtimeLabel;
      TextView runtimeLabel = ViewBindings.findChildViewById(rootView, id);
      if (runtimeLabel == null) {
        break missingId;
      }

      id = R.id.startTime;
      TextView startTime = ViewBindings.findChildViewById(rootView, id);
      if (startTime == null) {
        break missingId;
      }

      id = R.id.startTimeBox;
      LinearLayout startTimeBox = ViewBindings.findChildViewById(rootView, id);
      if (startTimeBox == null) {
        break missingId;
      }

      id = R.id.upload;
      TextView upload = ViewBindings.findChildViewById(rootView, id);
      if (upload == null) {
        break missingId;
      }

      return new FragmentResultHeadDetailBinding((LinearLayout) rootView, country, countryBox,
          dataUsage, download, networkBox, networkDetail, networkName, runtime, runtimeBox,
          runtimeLabel, startTime, startTimeBox, upload);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
