// Generated by view binder compiler. Do not edit!
package org.openobservatory.ooniprobe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openobservatory.ooniprobe.R;

public final class FragmentResultHeadTbaBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView available;

  @NonNull
  public final TextView availableTag;

  @NonNull
  public final TextView blocked;

  @NonNull
  public final TextView blockedTag;

  @NonNull
  public final TextView tested;

  @NonNull
  public final TextView testedTag;

  private FragmentResultHeadTbaBinding(@NonNull LinearLayout rootView, @NonNull TextView available,
      @NonNull TextView availableTag, @NonNull TextView blocked, @NonNull TextView blockedTag,
      @NonNull TextView tested, @NonNull TextView testedTag) {
    this.rootView = rootView;
    this.available = available;
    this.availableTag = availableTag;
    this.blocked = blocked;
    this.blockedTag = blockedTag;
    this.tested = tested;
    this.testedTag = testedTag;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentResultHeadTbaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentResultHeadTbaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_result_head_tba, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentResultHeadTbaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.available;
      TextView available = ViewBindings.findChildViewById(rootView, id);
      if (available == null) {
        break missingId;
      }

      id = R.id.availableTag;
      TextView availableTag = ViewBindings.findChildViewById(rootView, id);
      if (availableTag == null) {
        break missingId;
      }

      id = R.id.blocked;
      TextView blocked = ViewBindings.findChildViewById(rootView, id);
      if (blocked == null) {
        break missingId;
      }

      id = R.id.blockedTag;
      TextView blockedTag = ViewBindings.findChildViewById(rootView, id);
      if (blockedTag == null) {
        break missingId;
      }

      id = R.id.tested;
      TextView tested = ViewBindings.findChildViewById(rootView, id);
      if (tested == null) {
        break missingId;
      }

      id = R.id.testedTag;
      TextView testedTag = ViewBindings.findChildViewById(rootView, id);
      if (testedTag == null) {
        break missingId;
      }

      return new FragmentResultHeadTbaBinding((LinearLayout) rootView, available, availableTag,
          blocked, blockedTag, tested, testedTag);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
