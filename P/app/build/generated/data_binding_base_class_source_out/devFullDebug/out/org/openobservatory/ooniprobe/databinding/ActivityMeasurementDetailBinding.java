// Generated by view binder compiler. Do not edit!
package org.openobservatory.ooniprobe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openobservatory.ooniprobe.R;

public final class ActivityMeasurementDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FrameLayout body;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final Button data;

  @NonNull
  public final Button explorer;

  @NonNull
  public final FrameLayout footer;

  @NonNull
  public final FrameLayout head;

  @NonNull
  public final Button log;

  @NonNull
  public final TextView methodology;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMeasurementDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FrameLayout body, @NonNull CoordinatorLayout coordinatorLayout, @NonNull Button data,
      @NonNull Button explorer, @NonNull FrameLayout footer, @NonNull FrameLayout head,
      @NonNull Button log, @NonNull TextView methodology, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.body = body;
    this.coordinatorLayout = coordinatorLayout;
    this.data = data;
    this.explorer = explorer;
    this.footer = footer;
    this.head = head;
    this.log = log;
    this.methodology = methodology;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMeasurementDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMeasurementDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_measurement_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMeasurementDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.body;
      FrameLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.data;
      Button data = ViewBindings.findChildViewById(rootView, id);
      if (data == null) {
        break missingId;
      }

      id = R.id.explorer;
      Button explorer = ViewBindings.findChildViewById(rootView, id);
      if (explorer == null) {
        break missingId;
      }

      id = R.id.footer;
      FrameLayout footer = ViewBindings.findChildViewById(rootView, id);
      if (footer == null) {
        break missingId;
      }

      id = R.id.head;
      FrameLayout head = ViewBindings.findChildViewById(rootView, id);
      if (head == null) {
        break missingId;
      }

      id = R.id.log;
      Button log = ViewBindings.findChildViewById(rootView, id);
      if (log == null) {
        break missingId;
      }

      id = R.id.methodology;
      TextView methodology = ViewBindings.findChildViewById(rootView, id);
      if (methodology == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMeasurementDetailBinding((CoordinatorLayout) rootView, body,
          coordinatorLayout, data, explorer, footer, head, log, methodology, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
