// Generated by view binder compiler. Do not edit!
package org.openobservatory.ooniprobe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openobservatory.ooniprobe.R;

public final class ActivityBrowserBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout bottomBar;

  @NonNull
  public final RelativeLayout navigationBar;

  @NonNull
  public final RelativeLayout reloadOrProgress;

  @NonNull
  public final View separationBar;

  @NonNull
  public final ImageView shareButton;

  @NonNull
  public final WebView sitesWebView;

  @NonNull
  public final Button tryMirror;

  @NonNull
  public final TextView urlLabel;

  @NonNull
  public final ProgressBar webViewProgressBar;

  @NonNull
  public final ImageView webviewBack;

  @NonNull
  public final ImageView webviewClose;

  @NonNull
  public final ImageView webviewForward;

  @NonNull
  public final ImageView webviewReload;

  private ActivityBrowserBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout bottomBar, @NonNull RelativeLayout navigationBar,
      @NonNull RelativeLayout reloadOrProgress, @NonNull View separationBar,
      @NonNull ImageView shareButton, @NonNull WebView sitesWebView, @NonNull Button tryMirror,
      @NonNull TextView urlLabel, @NonNull ProgressBar webViewProgressBar,
      @NonNull ImageView webviewBack, @NonNull ImageView webviewClose,
      @NonNull ImageView webviewForward, @NonNull ImageView webviewReload) {
    this.rootView = rootView;
    this.bottomBar = bottomBar;
    this.navigationBar = navigationBar;
    this.reloadOrProgress = reloadOrProgress;
    this.separationBar = separationBar;
    this.shareButton = shareButton;
    this.sitesWebView = sitesWebView;
    this.tryMirror = tryMirror;
    this.urlLabel = urlLabel;
    this.webViewProgressBar = webViewProgressBar;
    this.webviewBack = webviewBack;
    this.webviewClose = webviewClose;
    this.webviewForward = webviewForward;
    this.webviewReload = webviewReload;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBrowserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBrowserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_browser, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBrowserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomBar;
      RelativeLayout bottomBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomBar == null) {
        break missingId;
      }

      id = R.id.navigationBar;
      RelativeLayout navigationBar = ViewBindings.findChildViewById(rootView, id);
      if (navigationBar == null) {
        break missingId;
      }

      id = R.id.reloadOrProgress;
      RelativeLayout reloadOrProgress = ViewBindings.findChildViewById(rootView, id);
      if (reloadOrProgress == null) {
        break missingId;
      }

      id = R.id.separationBar;
      View separationBar = ViewBindings.findChildViewById(rootView, id);
      if (separationBar == null) {
        break missingId;
      }

      id = R.id.shareButton;
      ImageView shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.sitesWebView;
      WebView sitesWebView = ViewBindings.findChildViewById(rootView, id);
      if (sitesWebView == null) {
        break missingId;
      }

      id = R.id.tryMirror;
      Button tryMirror = ViewBindings.findChildViewById(rootView, id);
      if (tryMirror == null) {
        break missingId;
      }

      id = R.id.urlLabel;
      TextView urlLabel = ViewBindings.findChildViewById(rootView, id);
      if (urlLabel == null) {
        break missingId;
      }

      id = R.id.webViewProgressBar;
      ProgressBar webViewProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (webViewProgressBar == null) {
        break missingId;
      }

      id = R.id.webviewBack;
      ImageView webviewBack = ViewBindings.findChildViewById(rootView, id);
      if (webviewBack == null) {
        break missingId;
      }

      id = R.id.webviewClose;
      ImageView webviewClose = ViewBindings.findChildViewById(rootView, id);
      if (webviewClose == null) {
        break missingId;
      }

      id = R.id.webviewForward;
      ImageView webviewForward = ViewBindings.findChildViewById(rootView, id);
      if (webviewForward == null) {
        break missingId;
      }

      id = R.id.webviewReload;
      ImageView webviewReload = ViewBindings.findChildViewById(rootView, id);
      if (webviewReload == null) {
        break missingId;
      }

      return new ActivityBrowserBinding((RelativeLayout) rootView, bottomBar, navigationBar,
          reloadOrProgress, separationBar, shareButton, sitesWebView, tryMirror, urlLabel,
          webViewProgressBar, webviewBack, webviewClose, webviewForward, webviewReload);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
