// Generated by view binder compiler. Do not edit!
package org.openobservatory.ooniprobe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openobservatory.ooniprobe.R;

public final class FragmentOnboarding2Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView bullet1;

  @NonNull
  public final TextView bullet2;

  @NonNull
  public final TextView bullet3;

  @NonNull
  public final TextView headsUp;

  @NonNull
  public final Button master;

  @NonNull
  public final Button slave;

  private FragmentOnboarding2Binding(@NonNull LinearLayout rootView, @NonNull TextView bullet1,
      @NonNull TextView bullet2, @NonNull TextView bullet3, @NonNull TextView headsUp,
      @NonNull Button master, @NonNull Button slave) {
    this.rootView = rootView;
    this.bullet1 = bullet1;
    this.bullet2 = bullet2;
    this.bullet3 = bullet3;
    this.headsUp = headsUp;
    this.master = master;
    this.slave = slave;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOnboarding2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOnboarding2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_onboarding_2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOnboarding2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bullet1;
      TextView bullet1 = ViewBindings.findChildViewById(rootView, id);
      if (bullet1 == null) {
        break missingId;
      }

      id = R.id.bullet2;
      TextView bullet2 = ViewBindings.findChildViewById(rootView, id);
      if (bullet2 == null) {
        break missingId;
      }

      id = R.id.bullet3;
      TextView bullet3 = ViewBindings.findChildViewById(rootView, id);
      if (bullet3 == null) {
        break missingId;
      }

      id = R.id.heads_up;
      TextView headsUp = ViewBindings.findChildViewById(rootView, id);
      if (headsUp == null) {
        break missingId;
      }

      id = R.id.master;
      Button master = ViewBindings.findChildViewById(rootView, id);
      if (master == null) {
        break missingId;
      }

      id = R.id.slave;
      Button slave = ViewBindings.findChildViewById(rootView, id);
      if (slave == null) {
        break missingId;
      }

      return new FragmentOnboarding2Binding((LinearLayout) rootView, bullet1, bullet2, bullet3,
          headsUp, master, slave);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
