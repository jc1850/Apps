// Generated by view binder compiler. Do not edit!
package org.openobservatory.ooniprobe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openobservatory.ooniprobe.R;

public final class FragmentMeasurementNdtBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView averagePing;

  @NonNull
  public final TextView maxPing;

  @NonNull
  public final TextView mss;

  @NonNull
  public final TextView packetLoss;

  private FragmentMeasurementNdtBinding(@NonNull LinearLayout rootView,
      @NonNull TextView averagePing, @NonNull TextView maxPing, @NonNull TextView mss,
      @NonNull TextView packetLoss) {
    this.rootView = rootView;
    this.averagePing = averagePing;
    this.maxPing = maxPing;
    this.mss = mss;
    this.packetLoss = packetLoss;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMeasurementNdtBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMeasurementNdtBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_measurement_ndt, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMeasurementNdtBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.averagePing;
      TextView averagePing = ViewBindings.findChildViewById(rootView, id);
      if (averagePing == null) {
        break missingId;
      }

      id = R.id.maxPing;
      TextView maxPing = ViewBindings.findChildViewById(rootView, id);
      if (maxPing == null) {
        break missingId;
      }

      id = R.id.mss;
      TextView mss = ViewBindings.findChildViewById(rootView, id);
      if (mss == null) {
        break missingId;
      }

      id = R.id.packetLoss;
      TextView packetLoss = ViewBindings.findChildViewById(rootView, id);
      if (packetLoss == null) {
        break missingId;
      }

      return new FragmentMeasurementNdtBinding((LinearLayout) rootView, averagePing, maxPing, mss,
          packetLoss);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
