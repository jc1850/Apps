// Generated by view binder compiler. Do not edit!
package org.openobservatory.ooniprobe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openobservatory.ooniprobe.R;

public final class FragmentResultListBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final TextView download;

  @NonNull
  public final TextView emptyState;

  @NonNull
  public final Spinner filterTests;

  @NonNull
  public final TextView networks;

  @NonNull
  public final RecyclerView recycler;

  @NonNull
  public final TextView tests;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView upload;

  private FragmentResultListBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull TextView download,
      @NonNull TextView emptyState, @NonNull Spinner filterTests, @NonNull TextView networks,
      @NonNull RecyclerView recycler, @NonNull TextView tests, @NonNull Toolbar toolbar,
      @NonNull TextView upload) {
    this.rootView = rootView;
    this.coordinatorLayout = coordinatorLayout;
    this.download = download;
    this.emptyState = emptyState;
    this.filterTests = filterTests;
    this.networks = networks;
    this.recycler = recycler;
    this.tests = tests;
    this.toolbar = toolbar;
    this.upload = upload;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentResultListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentResultListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_result_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentResultListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.download;
      TextView download = ViewBindings.findChildViewById(rootView, id);
      if (download == null) {
        break missingId;
      }

      id = R.id.emptyState;
      TextView emptyState = ViewBindings.findChildViewById(rootView, id);
      if (emptyState == null) {
        break missingId;
      }

      id = R.id.filterTests;
      Spinner filterTests = ViewBindings.findChildViewById(rootView, id);
      if (filterTests == null) {
        break missingId;
      }

      id = R.id.networks;
      TextView networks = ViewBindings.findChildViewById(rootView, id);
      if (networks == null) {
        break missingId;
      }

      id = R.id.recycler;
      RecyclerView recycler = ViewBindings.findChildViewById(rootView, id);
      if (recycler == null) {
        break missingId;
      }

      id = R.id.tests;
      TextView tests = ViewBindings.findChildViewById(rootView, id);
      if (tests == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.upload;
      TextView upload = ViewBindings.findChildViewById(rootView, id);
      if (upload == null) {
        break missingId;
      }

      return new FragmentResultListBinding((CoordinatorLayout) rootView, coordinatorLayout,
          download, emptyState, filterTests, networks, recycler, tests, toolbar, upload);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
