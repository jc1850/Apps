// Generated by Dagger (https://dagger.dev).
package org.openobservatory.ooniprobe.activity;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.openobservatory.ooniprobe.common.PreferenceManager;
import org.openobservatory.ooniprobe.domain.GetResults;
import org.openobservatory.ooniprobe.domain.GetTestSuite;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ResultDetailActivity_MembersInjector implements MembersInjector<ResultDetailActivity> {
  private final Provider<GetTestSuite> getTestSuiteProvider;

  private final Provider<GetResults> getResultsProvider;

  private final Provider<PreferenceManager> preferenceManagerProvider;

  public ResultDetailActivity_MembersInjector(Provider<GetTestSuite> getTestSuiteProvider,
      Provider<GetResults> getResultsProvider,
      Provider<PreferenceManager> preferenceManagerProvider) {
    this.getTestSuiteProvider = getTestSuiteProvider;
    this.getResultsProvider = getResultsProvider;
    this.preferenceManagerProvider = preferenceManagerProvider;
  }

  public static MembersInjector<ResultDetailActivity> create(
      Provider<GetTestSuite> getTestSuiteProvider, Provider<GetResults> getResultsProvider,
      Provider<PreferenceManager> preferenceManagerProvider) {
    return new ResultDetailActivity_MembersInjector(getTestSuiteProvider, getResultsProvider, preferenceManagerProvider);
  }

  @Override
  public void injectMembers(ResultDetailActivity instance) {
    injectGetTestSuite(instance, getTestSuiteProvider.get());
    injectGetResults(instance, getResultsProvider.get());
    injectPreferenceManager(instance, preferenceManagerProvider.get());
  }

  @InjectedFieldSignature("org.openobservatory.ooniprobe.activity.ResultDetailActivity.getTestSuite")
  public static void injectGetTestSuite(ResultDetailActivity instance, GetTestSuite getTestSuite) {
    instance.getTestSuite = getTestSuite;
  }

  @InjectedFieldSignature("org.openobservatory.ooniprobe.activity.ResultDetailActivity.getResults")
  public static void injectGetResults(ResultDetailActivity instance, GetResults getResults) {
    instance.getResults = getResults;
  }

  @InjectedFieldSignature("org.openobservatory.ooniprobe.activity.ResultDetailActivity.preferenceManager")
  public static void injectPreferenceManager(ResultDetailActivity instance,
      PreferenceManager preferenceManager) {
    instance.preferenceManager = preferenceManager;
  }
}
