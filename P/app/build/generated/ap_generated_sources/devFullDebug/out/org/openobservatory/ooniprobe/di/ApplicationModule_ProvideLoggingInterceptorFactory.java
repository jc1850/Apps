// Generated by Dagger (https://dagger.dev).
package org.openobservatory.ooniprobe.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideLoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideLoggingInterceptorFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return provideLoggingInterceptor(module);
  }

  public static ApplicationModule_ProvideLoggingInterceptorFactory create(
      ApplicationModule module) {
    return new ApplicationModule_ProvideLoggingInterceptorFactory(module);
  }

  public static HttpLoggingInterceptor provideLoggingInterceptor(ApplicationModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideLoggingInterceptor());
  }
}
