// Generated by Dagger (https://dagger.dev).
package org.openobservatory.ooniprobe.activity;

import com.google.gson.Gson;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.openobservatory.ooniprobe.common.PreferenceManager;
import org.openobservatory.ooniprobe.domain.GetTestSuite;
import org.openobservatory.ooniprobe.domain.VersionCompare;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OoniRunActivity_MembersInjector implements MembersInjector<OoniRunActivity> {
  private final Provider<PreferenceManager> preferenceManagerProvider;

  private final Provider<VersionCompare> versionCompareProvider;

  private final Provider<GetTestSuite> getSuiteProvider;

  private final Provider<Gson> gsonProvider;

  public OoniRunActivity_MembersInjector(Provider<PreferenceManager> preferenceManagerProvider,
      Provider<VersionCompare> versionCompareProvider, Provider<GetTestSuite> getSuiteProvider,
      Provider<Gson> gsonProvider) {
    this.preferenceManagerProvider = preferenceManagerProvider;
    this.versionCompareProvider = versionCompareProvider;
    this.getSuiteProvider = getSuiteProvider;
    this.gsonProvider = gsonProvider;
  }

  public static MembersInjector<OoniRunActivity> create(
      Provider<PreferenceManager> preferenceManagerProvider,
      Provider<VersionCompare> versionCompareProvider, Provider<GetTestSuite> getSuiteProvider,
      Provider<Gson> gsonProvider) {
    return new OoniRunActivity_MembersInjector(preferenceManagerProvider, versionCompareProvider, getSuiteProvider, gsonProvider);
  }

  @Override
  public void injectMembers(OoniRunActivity instance) {
    injectPreferenceManager(instance, preferenceManagerProvider.get());
    injectVersionCompare(instance, versionCompareProvider.get());
    injectGetSuite(instance, getSuiteProvider.get());
    injectGson(instance, gsonProvider.get());
  }

  @InjectedFieldSignature("org.openobservatory.ooniprobe.activity.OoniRunActivity.preferenceManager")
  public static void injectPreferenceManager(OoniRunActivity instance,
      PreferenceManager preferenceManager) {
    instance.preferenceManager = preferenceManager;
  }

  @InjectedFieldSignature("org.openobservatory.ooniprobe.activity.OoniRunActivity.versionCompare")
  public static void injectVersionCompare(OoniRunActivity instance, VersionCompare versionCompare) {
    instance.versionCompare = versionCompare;
  }

  @InjectedFieldSignature("org.openobservatory.ooniprobe.activity.OoniRunActivity.getSuite")
  public static void injectGetSuite(OoniRunActivity instance, GetTestSuite getSuite) {
    instance.getSuite = getSuite;
  }

  @InjectedFieldSignature("org.openobservatory.ooniprobe.activity.OoniRunActivity.gson")
  public static void injectGson(OoniRunActivity instance, Gson gson) {
    instance.gson = gson;
  }
}
