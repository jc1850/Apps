// Generated by Dagger (https://dagger.dev).
package org.openobservatory.ooniprobe.fragment.measurement;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.openobservatory.ooniprobe.common.PreferenceManager;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FailedFragment_MembersInjector implements MembersInjector<FailedFragment> {
  private final Provider<PreferenceManager> preferenceManagerProvider;

  public FailedFragment_MembersInjector(Provider<PreferenceManager> preferenceManagerProvider) {
    this.preferenceManagerProvider = preferenceManagerProvider;
  }

  public static MembersInjector<FailedFragment> create(
      Provider<PreferenceManager> preferenceManagerProvider) {
    return new FailedFragment_MembersInjector(preferenceManagerProvider);
  }

  @Override
  public void injectMembers(FailedFragment instance) {
    injectPreferenceManager(instance, preferenceManagerProvider.get());
  }

  @InjectedFieldSignature("org.openobservatory.ooniprobe.fragment.measurement.FailedFragment.preferenceManager")
  public static void injectPreferenceManager(FailedFragment instance,
      PreferenceManager preferenceManager) {
    instance.preferenceManager = preferenceManager;
  }
}
