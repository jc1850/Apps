apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId "ar.rulosoft.mimanganu"
        versionCode 133
        versionName "1.133"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        minSdkVersion 15
    }
    signingConfigs {
        release {
            storeFile file("../mimanganu.jks")
            storePassword 'mimanganu'
            keyAlias 'mimanganu'
            keyPassword 'mimanganu'
        }
        debug {
            storeFile file("../mimanganu.jks")
            storePassword 'mimanganu'
            keyAlias 'mimanganu'
            keyPassword 'mimanganu'
        }
    }
    buildTypes {
        release {
            lintOptions {
                disable 'MissingTranslation'
                //disable 'NewApi' //Avoid problems in Android Studio 2.4 preview 6
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    compileOptions.encoding = 'UTF-8'
    flavorDimensions "builds"
    productFlavors {
        fdroid {
            signingConfig signingConfigs.release
            dimension "builds"
        }
        github {
            signingConfig signingConfigs.release
            //removed to maintain updates as now are
            versionNameSuffix '-github'
            dimension "builds"
        }
    }
}

android.sourceSets {
    test {
        java.srcDirs += "$projectDir/src/testShare"
    }

    androidTest {
        java.srcDirs += "$projectDir/src/testShare"
    }
}

configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:25.3.1'
}

dependencies {
    api project(':imageviewtouchlibrary')
    fdroidApi project(':fakegps')

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'me.everything:overscroll-decor-android:1.0.4'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'com.github.sevar83:indeterminate-checkbox:1.0.5@aar'
    implementation group: 'org.brotli', name: 'dec', version: '0.1.2'
    //implementation group: 'com.github.junrar', name: 'junrar', version: '4.0.0'
    implementation 'com.github.raulhaag:RapidDecoder:0.3.1Ax'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1' //on 3.10.0 are deprecated some ciphers
    implementation 'com.squareup.okio:okio:1.15.0'
    implementation 'com.squareup.duktape:duktape-android:1.2.0'/* v 1.2.0 need 4+mb extra*/
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation 'com.evernote:android-job:1.4.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    githubImplementation 'com.google.android.gms:play-services-base:11.0.0'


    // for device-based testing
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'junit:junit:4.13'

    // for host-based testing
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'androidx.test:core:1.2.0'

    android {
        testOptions {
            unitTests {
                includeAndroidResources = true
            }
            all {
                // All the usual Gradle options.
                testLogging {
                    events "skipped", "failed", "standardOut", "standardError"
                    showStandardStreams = true
                }
            }
        }
        }
    }


    task classpath(type: Jar) {
        from android.sourceSets.main.java.srcDirs,
                android.sourceSets.test.java.srcDirs
        outputs.upToDateWhen { false }
        doLast {
            println "Building classpath..."
            def cp2 = [android.getBootClasspath()[0], it.archivePath]
            android.applicationVariants.all { v ->
                v.getCompileClasspath(null).getFiles().each{
                    File f->
                        cp2 += f.getAbsolutePath()//this is the one of classpath
                }
            }
            def classpath = cp2.unique().join(":")
            println classpath
        }
    }


}
