// Generated by view binder compiler. Do not edit!
package de.storchp.fdroidbuildstatus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.storchp.fdroidbuildstatus.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final TextView appId;

  @NonNull
  public final TextView appName;

  @NonNull
  public final ImageView archivedIcon;

  @NonNull
  public final ListView builds;

  @NonNull
  public final View contentMain;

  @NonNull
  public final ImageView disabledIcon;

  @NonNull
  public final ImageView favouriteIcon;

  @NonNull
  public final TextView metadataVersion;

  @NonNull
  public final ImageView needsUpdateIcon;

  @NonNull
  public final ImageView noPackagesIcon;

  @NonNull
  public final ImageView noUpdateCheckIcon;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView publishedVersions;

  private ActivityDetailBinding(@NonNull View rootView, @NonNull TextView appId,
      @NonNull TextView appName, @NonNull ImageView archivedIcon, @NonNull ListView builds,
      @NonNull View contentMain, @NonNull ImageView disabledIcon, @NonNull ImageView favouriteIcon,
      @NonNull TextView metadataVersion, @NonNull ImageView needsUpdateIcon,
      @NonNull ImageView noPackagesIcon, @NonNull ImageView noUpdateCheckIcon,
      @NonNull ProgressBar progressBar, @NonNull TextView publishedVersions) {
    this.rootView = rootView;
    this.appId = appId;
    this.appName = appName;
    this.archivedIcon = archivedIcon;
    this.builds = builds;
    this.contentMain = contentMain;
    this.disabledIcon = disabledIcon;
    this.favouriteIcon = favouriteIcon;
    this.metadataVersion = metadataVersion;
    this.needsUpdateIcon = needsUpdateIcon;
    this.noPackagesIcon = noPackagesIcon;
    this.noUpdateCheckIcon = noUpdateCheckIcon;
    this.progressBar = progressBar;
    this.publishedVersions = publishedVersions;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_id;
      TextView appId = ViewBindings.findChildViewById(rootView, id);
      if (appId == null) {
        break missingId;
      }

      id = R.id.app_name;
      TextView appName = ViewBindings.findChildViewById(rootView, id);
      if (appName == null) {
        break missingId;
      }

      id = R.id.archivedIcon;
      ImageView archivedIcon = ViewBindings.findChildViewById(rootView, id);
      if (archivedIcon == null) {
        break missingId;
      }

      id = R.id.builds;
      ListView builds = ViewBindings.findChildViewById(rootView, id);
      if (builds == null) {
        break missingId;
      }

      View contentMain = rootView;

      id = R.id.disabledIcon;
      ImageView disabledIcon = ViewBindings.findChildViewById(rootView, id);
      if (disabledIcon == null) {
        break missingId;
      }

      id = R.id.favouriteIcon;
      ImageView favouriteIcon = ViewBindings.findChildViewById(rootView, id);
      if (favouriteIcon == null) {
        break missingId;
      }

      id = R.id.metadata_version;
      TextView metadataVersion = ViewBindings.findChildViewById(rootView, id);
      if (metadataVersion == null) {
        break missingId;
      }

      id = R.id.needsUpdateIcon;
      ImageView needsUpdateIcon = ViewBindings.findChildViewById(rootView, id);
      if (needsUpdateIcon == null) {
        break missingId;
      }

      id = R.id.noPackagesIcon;
      ImageView noPackagesIcon = ViewBindings.findChildViewById(rootView, id);
      if (noPackagesIcon == null) {
        break missingId;
      }

      id = R.id.noUpdateCheckIcon;
      ImageView noUpdateCheckIcon = ViewBindings.findChildViewById(rootView, id);
      if (noUpdateCheckIcon == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.published_versions;
      TextView publishedVersions = ViewBindings.findChildViewById(rootView, id);
      if (publishedVersions == null) {
        break missingId;
      }

      return new ActivityDetailBinding(rootView, appId, appName, archivedIcon, builds, contentMain,
          disabledIcon, favouriteIcon, metadataVersion, needsUpdateIcon, noPackagesIcon,
          noUpdateCheckIcon, progressBar, publishedVersions);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
