// Generated by view binder compiler. Do not edit!
package de.storchp.fdroidbuildstatus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.storchp.fdroidbuildstatus.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWebsiteBuildStatusBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView websiteBuildStatusEndTimestampLabel;

  @NonNull
  public final TextView websiteBuildStatusEndTimestampText;

  @NonNull
  public final TextView websiteBuildStatusInfo;

  @NonNull
  public final TextView websiteBuildStatusStartTimestampLabel;

  @NonNull
  public final TextView websiteBuildStatusStartTimestampText;

  private ActivityWebsiteBuildStatusBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView websiteBuildStatusEndTimestampLabel,
      @NonNull TextView websiteBuildStatusEndTimestampText,
      @NonNull TextView websiteBuildStatusInfo,
      @NonNull TextView websiteBuildStatusStartTimestampLabel,
      @NonNull TextView websiteBuildStatusStartTimestampText) {
    this.rootView = rootView;
    this.websiteBuildStatusEndTimestampLabel = websiteBuildStatusEndTimestampLabel;
    this.websiteBuildStatusEndTimestampText = websiteBuildStatusEndTimestampText;
    this.websiteBuildStatusInfo = websiteBuildStatusInfo;
    this.websiteBuildStatusStartTimestampLabel = websiteBuildStatusStartTimestampLabel;
    this.websiteBuildStatusStartTimestampText = websiteBuildStatusStartTimestampText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWebsiteBuildStatusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWebsiteBuildStatusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_website_build_status, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWebsiteBuildStatusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.website_build_status_end_timestamp_label;
      TextView websiteBuildStatusEndTimestampLabel = ViewBindings.findChildViewById(rootView, id);
      if (websiteBuildStatusEndTimestampLabel == null) {
        break missingId;
      }

      id = R.id.website_build_status_end_timestamp_text;
      TextView websiteBuildStatusEndTimestampText = ViewBindings.findChildViewById(rootView, id);
      if (websiteBuildStatusEndTimestampText == null) {
        break missingId;
      }

      id = R.id.website_build_status_info;
      TextView websiteBuildStatusInfo = ViewBindings.findChildViewById(rootView, id);
      if (websiteBuildStatusInfo == null) {
        break missingId;
      }

      id = R.id.website_build_status_start_timestamp_label;
      TextView websiteBuildStatusStartTimestampLabel = ViewBindings.findChildViewById(rootView, id);
      if (websiteBuildStatusStartTimestampLabel == null) {
        break missingId;
      }

      id = R.id.website_build_status_start_timestamp_text;
      TextView websiteBuildStatusStartTimestampText = ViewBindings.findChildViewById(rootView, id);
      if (websiteBuildStatusStartTimestampText == null) {
        break missingId;
      }

      return new ActivityWebsiteBuildStatusBinding((RelativeLayout) rootView,
          websiteBuildStatusEndTimestampLabel, websiteBuildStatusEndTimestampText,
          websiteBuildStatusInfo, websiteBuildStatusStartTimestampLabel,
          websiteBuildStatusStartTimestampText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
