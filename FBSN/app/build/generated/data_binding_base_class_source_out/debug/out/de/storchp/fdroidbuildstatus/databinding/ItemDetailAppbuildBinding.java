// Generated by view binder compiler. Do not edit!
package de.storchp.fdroidbuildstatus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.storchp.fdroidbuildstatus.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDetailAppbuildBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView buildRunTypeFinished;

  @NonNull
  public final ImageView buildRunTypeRunning;

  @NonNull
  public final ImageView buildRunTypeUpdate;

  @NonNull
  public final ImageView statusIcon;

  @NonNull
  public final TextView version;

  private ItemDetailAppbuildBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView buildRunTypeFinished, @NonNull ImageView buildRunTypeRunning,
      @NonNull ImageView buildRunTypeUpdate, @NonNull ImageView statusIcon,
      @NonNull TextView version) {
    this.rootView = rootView;
    this.buildRunTypeFinished = buildRunTypeFinished;
    this.buildRunTypeRunning = buildRunTypeRunning;
    this.buildRunTypeUpdate = buildRunTypeUpdate;
    this.statusIcon = statusIcon;
    this.version = version;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDetailAppbuildBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDetailAppbuildBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_detail_appbuild, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDetailAppbuildBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buildRunTypeFinished;
      ImageView buildRunTypeFinished = ViewBindings.findChildViewById(rootView, id);
      if (buildRunTypeFinished == null) {
        break missingId;
      }

      id = R.id.buildRunTypeRunning;
      ImageView buildRunTypeRunning = ViewBindings.findChildViewById(rootView, id);
      if (buildRunTypeRunning == null) {
        break missingId;
      }

      id = R.id.buildRunTypeUpdate;
      ImageView buildRunTypeUpdate = ViewBindings.findChildViewById(rootView, id);
      if (buildRunTypeUpdate == null) {
        break missingId;
      }

      id = R.id.statusIcon;
      ImageView statusIcon = ViewBindings.findChildViewById(rootView, id);
      if (statusIcon == null) {
        break missingId;
      }

      id = R.id.version;
      TextView version = ViewBindings.findChildViewById(rootView, id);
      if (version == null) {
        break missingId;
      }

      return new ItemDetailAppbuildBinding((RelativeLayout) rootView, buildRunTypeFinished,
          buildRunTypeRunning, buildRunTypeUpdate, statusIcon, version);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
