plugins {
    id 'com.android.application'
    id 'de.mannodermaus.android-junit5'
    id 'org.jetbrains.kotlin.android'
}

def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', 'HEAD', '--count'
            standardOutput = stdout
        }
        return Integer.valueOf(stdout.toString().trim())
    } catch (ignored) {
        return null
    }
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "de.storchp.fdroidbuildstatus"
        minSdk 24
        targetSdk 33
        versionCode 49
        versionName "4.4.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument("runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder")
    }


    signingConfigs {
        nightly {
            if (System.getProperty("nightly_store_file") != null) {
                storeFile file(System.getProperty("nightly_store_file"))
                storePassword System.getProperty("nightly_store_password")
                keyAlias System.getProperty("nightly_key_alias")
                keyPassword System.getProperty("nightly_key_password")
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        nightly {
            signingConfig signingConfigs.nightly
            applicationIdSuffix ".nightly"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    testOptions {
        unitTests {
            includeAndroidResources true
            all {
                // All the usual Gradle options.
                testLogging {
                    events "skipped", "failed", "standardOut", "standardError"
                    showStandardStreams = true
                }
            }
        }
    }



    kotlinOptions {
        jvmTarget = 11
    }

    buildFeatures {
        viewBinding true
    }
    namespace 'de.storchp.fdroidbuildstatus'
    lint {
        disable 'MissingTranslation'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "applicationId", variant.applicationId

        if (variant.buildType.name == 'nightly') {
            variant.outputs.all {
                setVersionCodeOverride(getVersionCode())
                setVersionNameOverride(versionName + "-" + versionCode)
                outputFileName = "${applicationId}_${variant.versionCode}.apk"
            }
        }
    }

}

task classpath(type: Jar) {
    from android.sourceSets.main.java.srcDirs,
            android.sourceSets.test.java.srcDirs
    outputs.upToDateWhen { false }
    doLast {
        println "Building classpath..."
        def cp2 = [android.getBootClasspath()[0], it.archivePath]
        android.applicationVariants.all { v ->
            v.getCompileClasspath(null).getFiles().each{
                File f->
                    cp2 += f.getAbsolutePath()//this is the one of classpath
            }
        }
        def classpath = cp2.unique().join(":")
        println classpath
    }
}

ext {
    retrofitVersion = '2.9.0'
    lifecycle_version = "2.6.1"
    junitVersion = '5.9.2'
    assertJVersion = '3.24.2'
}

dependencies {

    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.0.3"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofitVersion"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

    // Fix #145: https://github.com/FasterXML/jackson-databind/issues/3412
    // jackson 2.13 is the last supporting Android SDK 21+, 2.14 requires 26+
    // https://github.com/FasterXML/jackson/wiki/Jackson-Releases
    //noinspection GradleDependency
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.4'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.4'

    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.code.gson:gson:2.10.1'

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.assertj:assertj-core:$assertJVersion"
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'de.mannodermaus.junit5:android-test-core:1.3.0'
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    androidTestImplementation "org.assertj:assertj-core:$assertJVersion"
    androidTestRuntimeOnly 'de.mannodermaus.junit5:android-test-runner:1.3.0'
}
