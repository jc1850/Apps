// Code generated by dagger-compiler.  Do not edit.
package io.github.hidroh.materialistic;

import android.content.Context;
import dagger.internal.Binding;
import dagger.internal.BindingsGroup;
import dagger.internal.Linker;
import dagger.internal.ModuleAdapter;
import dagger.internal.ProvidesBinding;
import io.github.hidroh.materialistic.widget.PopupMenu;
import java.lang.Class;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Set;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @dagger.Provides} methods.
 */
public final class UiModule$$ModuleAdapter extends ModuleAdapter<UiModule> {
  private static final String[] INJECTS = { "members/io.github.hidroh.materialistic.AboutActivity", "members/io.github.hidroh.materialistic.AskActivity", "members/io.github.hidroh.materialistic.BestActivity", "members/io.github.hidroh.materialistic.ComposeActivity", "members/io.github.hidroh.materialistic.FavoriteActivity", "members/io.github.hidroh.materialistic.FeedbackActivity", "members/io.github.hidroh.materialistic.ItemActivity", "members/io.github.hidroh.materialistic.JobsActivity", "members/io.github.hidroh.materialistic.ListActivity", "members/io.github.hidroh.materialistic.LoginActivity", "members/io.github.hidroh.materialistic.NewActivity", "members/io.github.hidroh.materialistic.OfflineWebActivity", "members/io.github.hidroh.materialistic.PopularActivity", "members/io.github.hidroh.materialistic.ReleaseNotesActivity", "members/io.github.hidroh.materialistic.SearchActivity", "members/io.github.hidroh.materialistic.SettingsActivity", "members/io.github.hidroh.materialistic.ShowActivity", "members/io.github.hidroh.materialistic.SubmitActivity", "members/io.github.hidroh.materialistic.ThreadPreviewActivity", "members/io.github.hidroh.materialistic.UserActivity", "members/io.github.hidroh.materialistic.appwidget.WidgetConfigActivity", "members/io.github.hidroh.materialistic.FavoriteFragment", "members/io.github.hidroh.materialistic.ItemFragment", "members/io.github.hidroh.materialistic.ListFragment", "members/io.github.hidroh.materialistic.WebFragment", "members/io.github.hidroh.materialistic.widget.FavoriteRecyclerViewAdapter", "members/io.github.hidroh.materialistic.widget.SinglePageItemRecyclerViewAdapter", "members/io.github.hidroh.materialistic.widget.StoryRecyclerViewAdapter", "members/io.github.hidroh.materialistic.widget.SubmissionRecyclerViewAdapter", "members/io.github.hidroh.materialistic.widget.MultiPageItemRecyclerViewAdapter", "members/io.github.hidroh.materialistic.widget.ThreadPreviewRecyclerViewAdapter", };

  private static final Class<?>[] STATIC_INJECTIONS = { };

  private static final Class<?>[] INCLUDES = { };

  public UiModule$$ModuleAdapter() {
    super(UiModule.class, INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, false /*complete*/, true /*library*/);
  }

  @Override
  public UiModule newModule() {
    return new UiModule();
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(BindingsGroup bindings, UiModule module) {
    bindings.contributeProvidesBinding("io.github.hidroh.materialistic.widget.PopupMenu", new ProvidePopupMenuProvidesAdapter(module));
    bindings.contributeProvidesBinding("io.github.hidroh.materialistic.CustomTabsDelegate", new ProvideCustomTabsDelegateProvidesAdapter(module));
    bindings.contributeProvidesBinding("io.github.hidroh.materialistic.KeyDelegate", new ProvideKeyDelegateProvidesAdapter(module));
    bindings.contributeProvidesBinding("io.github.hidroh.materialistic.ActionViewResolver", new ProvideActionViewResolverProvidesAdapter(module));
    bindings.contributeProvidesBinding("io.github.hidroh.materialistic.AlertDialogBuilder", new ProvideAlertDialogBuilderProvidesAdapter(module));
    bindings.contributeProvidesBinding("io.github.hidroh.materialistic.ResourcesProvider", new ProvideResourcesProviderProvidesAdapter(module));
  }

  /**
   * A {@code Binding<PopupMenu>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<PopupMenu>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvidePopupMenuProvidesAdapter extends ProvidesBinding<PopupMenu> {
    private final UiModule module;

    public ProvidePopupMenuProvidesAdapter(UiModule module) {
      super("io.github.hidroh.materialistic.widget.PopupMenu", NOT_SINGLETON, "io.github.hidroh.materialistic.UiModule", "providePopupMenu");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<PopupMenu>}.
     */
    @Override
    public PopupMenu get() {
      return module.providePopupMenu();
    }
  }

  /**
   * A {@code Binding<CustomTabsDelegate>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<CustomTabsDelegate>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideCustomTabsDelegateProvidesAdapter extends ProvidesBinding<CustomTabsDelegate> {
    private final UiModule module;

    public ProvideCustomTabsDelegateProvidesAdapter(UiModule module) {
      super("io.github.hidroh.materialistic.CustomTabsDelegate", IS_SINGLETON, "io.github.hidroh.materialistic.UiModule", "provideCustomTabsDelegate");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<CustomTabsDelegate>}.
     */
    @Override
    public CustomTabsDelegate get() {
      return module.provideCustomTabsDelegate();
    }
  }

  /**
   * A {@code Binding<KeyDelegate>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<KeyDelegate>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideKeyDelegateProvidesAdapter extends ProvidesBinding<KeyDelegate> {
    private final UiModule module;

    public ProvideKeyDelegateProvidesAdapter(UiModule module) {
      super("io.github.hidroh.materialistic.KeyDelegate", IS_SINGLETON, "io.github.hidroh.materialistic.UiModule", "provideKeyDelegate");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<KeyDelegate>}.
     */
    @Override
    public KeyDelegate get() {
      return module.provideKeyDelegate();
    }
  }

  /**
   * A {@code Binding<ActionViewResolver>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<ActionViewResolver>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideActionViewResolverProvidesAdapter extends ProvidesBinding<ActionViewResolver> {
    private final UiModule module;

    public ProvideActionViewResolverProvidesAdapter(UiModule module) {
      super("io.github.hidroh.materialistic.ActionViewResolver", IS_SINGLETON, "io.github.hidroh.materialistic.UiModule", "provideActionViewResolver");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<ActionViewResolver>}.
     */
    @Override
    public ActionViewResolver get() {
      return module.provideActionViewResolver();
    }
  }

  /**
   * A {@code Binding<AlertDialogBuilder>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<AlertDialogBuilder>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideAlertDialogBuilderProvidesAdapter extends ProvidesBinding<AlertDialogBuilder> {
    private final UiModule module;

    public ProvideAlertDialogBuilderProvidesAdapter(UiModule module) {
      super("io.github.hidroh.materialistic.AlertDialogBuilder", NOT_SINGLETON, "io.github.hidroh.materialistic.UiModule", "provideAlertDialogBuilder");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<AlertDialogBuilder>}.
     */
    @Override
    public AlertDialogBuilder get() {
      return module.provideAlertDialogBuilder();
    }
  }

  /**
   * A {@code Binding<ResourcesProvider>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Owning the dependency links between {@code ResourcesProvider} and its
   * dependencies.
   *
   * Being a {@code Provider<ResourcesProvider>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideResourcesProviderProvidesAdapter extends ProvidesBinding<ResourcesProvider> {
    private final UiModule module;

    private Binding<Context> context;

    public ProvideResourcesProviderProvidesAdapter(UiModule module) {
      super("io.github.hidroh.materialistic.ResourcesProvider", IS_SINGLETON, "io.github.hidroh.materialistic.UiModule", "provideResourcesProvider");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Used internally to link bindings/providers together at run time
     * according to their dependency graph.
     */
    @Override
    @SuppressWarnings("unchecked")
    public void attach(Linker linker) {
      context = (Binding<Context>) linker.requestBinding("android.content.Context", UiModule.class, getClass().getClassLoader());
    }

    /**
     * Used internally obtain dependency information, such as for cyclical
     * graph detection.
     */
    @Override
    public void getDependencies(Set<Binding<?>> getBindings,
        Set<Binding<?>> injectMembersBindings) {
      getBindings.add(context);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<ResourcesProvider>}.
     */
    @Override
    public ResourcesProvider get() {
      return module.provideResourcesProvider(context.get());
    }
  }
}
