// Code generated by dagger-compiler.  Do not edit.
package io.github.hidroh.materialistic.widget;

import androidx.recyclerview.widget.RecyclerView;
import dagger.internal.Binding;
import dagger.internal.Linker;
import io.github.hidroh.materialistic.AlertDialogBuilder;
import io.github.hidroh.materialistic.accounts.UserServices;
import io.github.hidroh.materialistic.data.FavoriteManager;
import java.lang.Override;
import java.lang.SuppressWarnings;
import java.util.Set;

/**
 * A {@code Binding<io.github.hidroh.materialistic.widget.ListRecyclerViewAdapter<VH, T>>} implementation which satisfies
 * Dagger's infrastructure requirements including:
 *
 * Owning the dependency links between {@code io.github.hidroh.materialistic.widget.ListRecyclerViewAdapter<VH, T>} and its
 * dependencies.
 *
 * Being a {@code MembersInjector<io.github.hidroh.materialistic.widget.ListRecyclerViewAdapter<VH, T>>} and handling injection
 * of annotated fields.
 */
public final class ListRecyclerViewAdapter$$InjectAdapter extends Binding<ListRecyclerViewAdapter> {
  private Binding<PopupMenu> mPopupMenu;

  private Binding<AlertDialogBuilder> mAlertDialogBuilder;

  private Binding<UserServices> mUserServices;

  private Binding<FavoriteManager> mFavoriteManager;

  private Binding<RecyclerView.Adapter> supertype;

  public ListRecyclerViewAdapter$$InjectAdapter() {
    super(null, "members/io.github.hidroh.materialistic.widget.ListRecyclerViewAdapter", NOT_SINGLETON, ListRecyclerViewAdapter.class);
  }

  /**
   * Used internally to link bindings/providers together at run time
   * according to their dependency graph.
   */
  @Override
  @SuppressWarnings("unchecked")
  public void attach(Linker linker) {
    mPopupMenu = (Binding<PopupMenu>) linker.requestBinding("io.github.hidroh.materialistic.widget.PopupMenu", ListRecyclerViewAdapter.class, getClass().getClassLoader());
    mAlertDialogBuilder = (Binding<AlertDialogBuilder>) linker.requestBinding("io.github.hidroh.materialistic.AlertDialogBuilder", ListRecyclerViewAdapter.class, getClass().getClassLoader());
    mUserServices = (Binding<UserServices>) linker.requestBinding("io.github.hidroh.materialistic.accounts.UserServices", ListRecyclerViewAdapter.class, getClass().getClassLoader());
    mFavoriteManager = (Binding<FavoriteManager>) linker.requestBinding("io.github.hidroh.materialistic.data.FavoriteManager", ListRecyclerViewAdapter.class, getClass().getClassLoader());
    supertype = (Binding<RecyclerView.Adapter>) linker.requestBinding("members/androidx.recyclerview.widget.RecyclerView$Adapter", ListRecyclerViewAdapter.class, getClass().getClassLoader(), false, true);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
    injectMembersBindings.add(mPopupMenu);
    injectMembersBindings.add(mAlertDialogBuilder);
    injectMembersBindings.add(mUserServices);
    injectMembersBindings.add(mFavoriteManager);
    injectMembersBindings.add(supertype);
  }

  /**
   * Injects any {@code @Inject} annotated fields in the given instance,
   * satisfying the contract for {@code Provider<ListRecyclerViewAdapter>}.
   */
  @Override
  public void injectMembers(ListRecyclerViewAdapter object) {
    object.mPopupMenu = mPopupMenu.get();
    object.mAlertDialogBuilder = mAlertDialogBuilder.get();
    object.mUserServices = mUserServices.get();
    object.mFavoriteManager = mFavoriteManager.get();
    supertype.injectMembers(object);
  }
}
